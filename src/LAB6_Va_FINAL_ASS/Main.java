/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LAB6_Va_FINAL_ASS;

import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Nguyen Anh Dung
 */
public class Main extends javax.swing.JFrame {

    Service service;
    UserPOLY userPOLY;

    /**
     * Creates new form Main
     */
    public Main() throws ClassNotFoundException, IOException {
        initComponents();
        service = new Service();
        setLocationRelativeTo(null);// Khi hiển thị chương trình sẽ hiển thị ở giữa
        setResizable(false);// Không cho phép Resize Form   
        loadTable();
    }

    void lamMoi() {
        txt_user.setText(null);
        txt_matkhau.setText(null);
        txt_mk2.setText(null);
    }

    void loadTable() throws ClassNotFoundException, IOException {
        String[] headerTable = {"Id", "Mật Khẩu"};

        for (int i = 0; i < tbl_User.getColumnCount(); i++) {
            TableColumn column = tbl_User.getTableHeader().getColumnModel().getColumn(i);
            column.setHeaderValue(headerTable[i]);
        }

        //DefaultTableModel
        DefaultTableModel defaultTableModel = (DefaultTableModel) tbl_User.getModel();
        defaultTableModel.setRowCount(0);

        //Lấy dữ liệu ra từ File đọc lên
        List<UserPOLY> lstUserPOLYs = service.getListUserPOLYs();
        for (UserPOLY x : lstUserPOLYs) {
            defaultTableModel.addRow(new Object[]{x.getUserID(), x.getPass()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_matkhau = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_mk2 = new javax.swing.JTextField();
        btn_LamMoi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_User = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btn_SuaTk = new javax.swing.JButton();
        btn_XoaTk = new javax.swing.JButton();
        btn_TimKiem = new javax.swing.JButton();
        btn_TaoTK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Tài Khoản:");

        txt_user.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Mật khẩu:");

        txt_matkhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Nhắc lại MK:");

        txt_mk2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btn_LamMoi.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_LamMoi.setText("Làm Mới");
        btn_LamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_LamMoiActionPerformed(evt);
            }
        });

        tbl_User.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tbl_User.setShowGrid(false);
        tbl_User.setShowHorizontalLines(true);
        tbl_User.setShowVerticalLines(true);
        tbl_User.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_UserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_User);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 204));
        jLabel3.setText("ĐỀ THI LAB 6");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("QUẢN LÝ TÀI KHOẢN");

        btn_SuaTk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_SuaTk.setText("Sửa TK");
        btn_SuaTk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SuaTkActionPerformed(evt);
            }
        });

        btn_XoaTk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_XoaTk.setText("Xóa TK");
        btn_XoaTk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_XoaTkActionPerformed(evt);
            }
        });

        btn_TimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_TimKiem.setText("Tìm Kiếm");
        btn_TimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimKiemActionPerformed(evt);
            }
        });

        btn_TaoTK.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btn_TaoTK.setText("Tạo TK");
        btn_TaoTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TaoTKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(428, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_SuaTk, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_TaoTK, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(208, 208, 208))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(jLabel11)
                            .addGap(159, 159, 159)
                            .addComponent(btn_LamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(60, 60, 60)
                            .addComponent(jLabel3))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel8))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(20, 20, 20)
                                    .addComponent(jLabel7))
                                .addComponent(jLabel9))
                            .addGap(21, 21, 21)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_matkhau, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txt_mk2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(200, 200, 200)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btn_XoaTk, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(btn_TaoTK, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_SuaTk, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(263, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 26, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(jLabel11))
                        .addComponent(btn_LamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGap(4, 4, 4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel9))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(txt_matkhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(txt_mk2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btn_XoaTk, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(14, 14, 14)
                            .addComponent(btn_TimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(22, 22, 22)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 27, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_LamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_LamMoiActionPerformed
        txt_user.setText(null);
        txt_matkhau.setText(null);
        txt_mk2.setText(null);

    }//GEN-LAST:event_btn_LamMoiActionPerformed

    private void tbl_UserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_UserMouseClicked
        try {
            int temp = tbl_User.getSelectedRow();
            txt_user.setText(service.getListUserPOLYs().get(temp).getUserID());
            txt_matkhau.setText(service.getListUserPOLYs().get(temp).getPass());
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_tbl_UserMouseClicked

    private void btn_SuaTkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SuaTkActionPerformed
        if (txt_user.getText().isBlank() && txt_matkhau.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Bạn không được để null các ô khi muốn sửa");
            return;
        } else if (service.getIndexUser(txt_user.getText()) == - 1) {
            JOptionPane.showMessageDialog(this, "Tài khoản không tìm thấy trong danh sách");
            return;
        } else {
            try {
                String userinput = txt_user.getText().trim();
                String pasString = txt_matkhau.getText().trim();
                userPOLY = new UserPOLY(userinput, pasString);
                if (service.suaTaiKhoan(userPOLY)) {
                    try {
                        JOptionPane.showMessageDialog(this, "Bạn đã sửa thành công");
                        lamMoi();
                        loadTable();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa thất bại");
                }
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btn_SuaTkActionPerformed

    private void btn_XoaTkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_XoaTkActionPerformed
        if (txt_user.getText().isBlank() && txt_matkhau.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Bạn không được để null các ô khi muốn sửa");
            return;
        } else if (service.getIndexUser(txt_user.getText()) == - 1) {
            JOptionPane.showMessageDialog(this, "Tài khoản không tìm thấy trong danh sách");
            return;
        }
        int a = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không", "Cảnh Báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (a == JOptionPane.YES_OPTION) {
            try {
                if (service.xoaTaiKhoan(service.getIndexUser(txt_user.getText().trim()))) {
                    JOptionPane.showMessageDialog(this, "Bạn đã xóa thành công");
                    loadTable();
                    lamMoi();
                }else{
                    JOptionPane.showMessageDialog(this, "Bạn đã xóa thất bại");
                }
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (a == JOptionPane.NO_OPTION) {
            
        }
    }//GEN-LAST:event_btn_XoaTkActionPerformed

    private void btn_TimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimKiemActionPerformed
        try {
            String temp = JOptionPane.showInputDialog("Mời bạn nhập User cần tìm");
            if (temp.isBlank()) {
                return;
            }
            int a = service.getIndexUser(temp);
            txt_user.setText(service.getListUserPOLYs().get(a).getUserID());
            txt_matkhau.setText(service.getListUserPOLYs().get(a).getPass());
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_TimKiemActionPerformed

    private void btn_TaoTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TaoTKActionPerformed
        String userinput = txt_user.getText().trim();
        String pasString = txt_matkhau.getText().trim();
        if (service.getIndexUser(userinput) != - 1) {
            JOptionPane.showMessageDialog(this, "Tài khoản đã tồn tại");
        } else {
            userPOLY = new UserPOLY(userinput, pasString);
            try {
                if (service.themTaiKhoan(userPOLY)) {
                    JOptionPane.showMessageDialog(this, "Bạn đã thêm thành công");
                    loadTable();
                } else {
                    JOptionPane.showMessageDialog(this, "Bạn đã thêm thất bại");
                }
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_TaoTKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_LamMoi;
    private javax.swing.JButton btn_SuaTk;
    private javax.swing.JButton btn_TaoTK;
    private javax.swing.JButton btn_TimKiem;
    private javax.swing.JButton btn_XoaTk;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_User;
    private javax.swing.JTextField txt_matkhau;
    private javax.swing.JTextField txt_mk2;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables
}
